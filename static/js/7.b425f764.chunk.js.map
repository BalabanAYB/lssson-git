{"version":3,"sources":["utils/FormControls/FormControls.module.css","utils/FormControls/FormControls.jsx","utils/validator/validator.js","components/Login/Login.jsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","s","formControl","Input","type","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","name","placeholder","component","validate","someError","connect","state","isAuth","auth","loginAuthMeThunk","to","formData","email","password","rememberMe"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,kC,yJCErGC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC5CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,8BACG,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UAEA,oDAAcL,GAAWE,IACxBC,GAAY,+BAAOF,EAAKI,cAMrBI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACzCC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OAAO,8BACJ,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACG,+CAAOK,KAAK,QAAWV,GAAWE,IACjCC,GAAY,+BAAOF,EAAKI,e,iCCtBlC,oEAAO,IAAMM,EAAW,SAACC,GACzB,IAAIA,EACJ,MAAO,qBAGMC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAChD,GAAGA,EAAMG,OAASD,EAAW,MAAM,+BAAN,OAAsCA,EAAtC,kB,iCCN7B,oGAkCME,EAAiBC,YAAU,CAACC,KAAK,SAAhBD,EAzBL,SAACf,GAChB,OACC,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACJ,8BACG,cAAC,IAAD,CAAOC,KAAM,QAASC,YAAa,OAAQC,UAAWd,IACtDe,SAAU,CAACb,SAGd,8BACG,cAAC,IAAD,CAAOU,KAAM,WAAYC,YAAa,WAAYC,UAAWd,IAC7De,SAAU,CAACb,SAGd,gCACG,cAAC,IAAD,CAAOU,KAAM,aAAcE,UAAW,QAASb,KAAM,aADxD,kBAGA,gCACIR,EAAMG,OAAS,qBAAKC,UAAWC,IAAEkB,UAAlB,SAA8BvB,EAAMG,QAEpD,oDAgCYqB,uBAPO,SAACC,GACnB,MAAO,CACJC,OAAQD,EAAME,KAAKD,UAKc,CAACE,sBAA1BJ,EAxBD,SAACxB,GAMZ,OAAGA,EAAM0B,OACA,cAAC,IAAD,CAAUG,GAAI,aAGnB,gCACJ,uCACH,cAACf,EAAD,CAAgBG,SAVI,SAACa,GACf9B,EAAM4B,iBAAiBE,EAASC,MAAMD,EAASE,SAAUF,EAASG","file":"static/js/7.b425f764.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__ZaVfv\",\"error\":\"FormControls_error__2MRZ5\",\"someError\":\"FormControls_someError__1Dhar\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div>\r\n         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n\r\n         <textarea {...input} {...props}/>\r\n         {hasError && <span>{meta.error}</span>}\r\n         </div>\r\n      </div>\r\n   )\r\n} \r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error\r\n\r\n   return <div>\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')} >\r\n         <input type=\"text\" {...input} {...props} />\r\n         {hasError && <span>{meta.error}</span> }\r\n      </div>\r\n   </div>\r\n\r\n}","export const required = (value) => {\r\nif (value) return undefined\r\nreturn \"Field is required\"\r\n} \r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\nif(value.length > maxLength) return `maximum length is more than ${maxLength} characters`\r\nreturn undefined\r\n} ","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginAuthMeThunk} from \"../../Redux/authReducer\";\r\nimport { Input } from \"../../utils/FormControls/FormControls\";\r\nimport s from \"../../utils/FormControls/FormControls.module.css\"\r\nimport { required } from \"../../utils/validator/validator\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n    <form onSubmit={props.handleSubmit}>\r\n<div>\r\n   <Field name={'email'} placeholder={'name'} component={Input}\r\n   validate={[required]} />\r\n</div>\r\n\r\n<div>\r\n   <Field name={'password'} placeholder={'password'} component={Input}\r\n   validate={[required]} />\r\n</div>\r\n\r\n<div>\r\n   <Field name={'rememberMe'} component={'input'} type={'checkbox'} /> remember me\r\n</div>\r\n<div>\r\n   {props.error && <div className={s.someError}>{props.error}</div>}\r\n\r\n   <button>Login</button>\r\n</div>\r\n   </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n   const onSubmit = (formData) => {\r\n      props.loginAuthMeThunk(formData.email,formData.password, formData.rememberMe)\r\n   }\r\n\r\n   if(props.isAuth){\r\n     return <Redirect to={'/profile'} />\r\n   }\r\n   else {\r\nreturn <div>\r\n   <h1>Login</h1>\r\n<LoginReduxForm onSubmit={onSubmit} />\r\n</div>\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n       isAuth: state.auth.isAuth\r\n      }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {loginAuthMeThunk}) (Login);"],"sourceRoot":""}