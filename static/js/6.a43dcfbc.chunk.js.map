{"version":3,"sources":["components/hoc/WithAuthRedirect.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Users/Users.module.css","utils/Paginator/Paginator.module.css","assect/user.png","utils/Paginator/Paginator.jsx","components/Users/Users.jsx","Redux/usersSelect.js","components/Users/UsersContainer.jsx"],"names":["WithAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Paginator","portionSize","pages","pageNumber","Math","ceil","totalItemsCount","pageCount","portionCount","useState","portionCurrentPage","setPortionCurrentPage","leftPortionPage","rightPortionPage","className","s","pagesContainer","onClick","filter","p","map","page","currentPage","activeCount","usersPageNumber","Users","totalCount","users","m","container","friend","id","icon","src","photos","small","userPhoto","alt","followed","disabled","followingInProgress","some","setUnFollowThunk","setFollowThunk","info","infoBlock","name","status","location","country","city","getUsers","usersPage","getTotalCount","getCurrentPage","getPageCount","getIsFetching","isFetching","getFollowingInProgress","compose","follow","unFollow","setCurrentPage","toggleIsFetching","toggleIsFollowing","getUsersThunk","useEffect","console","log","Preloader"],"mappings":"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","file":"static/js/6.a43dcfbc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router';\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render () {\r\n         if (!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n         }\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n   let mapStateToPropsForRedirect = (state) => ({\r\n      isAuth:state.auth.isAuth\r\n   })\r\n\r\n   let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n   return ConnectedAuthRedirectComponent;\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__lHIlr\",\"infoBlock\":\"Users_infoBlock__85WYB\",\"location\":\"Users_location__1UEG4\",\"icon\":\"Users_icon__MfKz4\",\"friend\":\"Users_friend__RbzPm\",\"info\":\"Users_info__HQOqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeCount\":\"Paginator_activeCount__2KIsZ\",\"pagesContainer\":\"Paginator_pagesContainer__1m5tP\",\"page\":\"Paginator_page__3NUI8\"};","export default __webpack_public_path__ + \"static/media/user.86873d81.png\";","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css'\r\n\r\nconst Paginator = (props, {portionSize = 10}) => {\r\n   let pages = [];\r\n    let pageNumber = Math.ceil(props.totalItemsCount / props.pageCount)\r\n    for (let i = 1; i <= pageNumber; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageNumber/portionSize)\r\n    let [portionCurrentPage, setPortionCurrentPage] = useState(1)\r\n    let leftPortionPage = (portionCurrentPage -1) * portionSize + 1;\r\n    let rightPortionPage = portionCurrentPage * portionSize\r\ndebugger\r\n   return <div className={s.pagesContainer}>\r\n   {portionCurrentPage > 1 && <button onClick={() => {setPortionCurrentPage(portionCurrentPage-1)}} >Prev</button>}\r\n   <div>\r\n            {\r\n                pages\r\n                .filter(p => p >= leftPortionPage && p <= rightPortionPage )\r\n                .map(p => {\r\n                    return <>\r\n                    <span className={`${s.page}  ${p === props.currentPage && s.activeCount}`} onClick={() => {\r\n                        props.usersPageNumber(p)\r\n                    }}>{p}</span></>\r\n                })\r\n            }\r\n        </div>\r\n        {portionCurrentPage < portionCount && <button onClick={() => {setPortionCurrentPage(portionCurrentPage+1)}} >Next</button>}\r\n   </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport userPhoto from './../../assect/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../../utils/Paginator/Paginator\"\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <Paginator {...props} totalItemsCount={props.totalCount} />\r\n        {\r\n            props.users.map(m => <div key={m.id} className={s.container}>\r\n                    <div className={s.friend}>\r\n                        <NavLink to={`profile/` + m.id}>\r\n                            <img className={s.icon} src={m.photos.small != null ? m.photos.small : userPhoto} alt=\"\"/>\r\n                        </NavLink>\r\n                        <div>\r\n                            {m.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === m.id)} onClick={ () => { props.setUnFollowThunk(m.id)}\r\n                                   /* props.toggleIsFollowing(true, m.id)\r\n                                    usersAPI.setUnFollowUsers(m.id)\r\n                                        .then((data) => {\r\n                                            if (data.resultCode === 0) {\r\n                                                props.unFollow(m.id)\r\n                                            }\r\n                                            props.toggleIsFollowing(false, m.id)\r\n                                        })*/\r\n                            }>Unfollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === m.id)} onClick={ () => {props.setFollowThunk(m.id)}\r\n                                    \r\n                                   /* props.toggleIsFollowing(true, m.id)\r\n                                    usersAPI.setFollowUsers(m.id)\r\n                                        .then((data) => {\r\n                                            if (data.resultCode === 0) {\r\n                                                props.follow(m.id)\r\n                                            }\r\n                                            props.toggleIsFollowing(false, m.id)\r\n                                        })*/\r\n                                }>Follow</button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <div className={s.infoBlock}>\r\n                            <div className={s.name}>{m.name}</div>\r\n                            <div className={s.status}>{m.status}</div>\r\n                        </div>\r\n                        <div className={s.location}>\r\n                            <div className={s.country}>{'m.location.country'}</div>\r\n                            <div className={s.city}>{'m.location.city'}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n   return state.usersPage.users\r\n}\r\n\r\nexport const getTotalCount = (state) => {\r\n   return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n   return state.usersPage.currentPage\r\n}\r\n\r\nexport const getPageCount = (state) => {\r\n   return state.usersPage.pageCount\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n   return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress= (state) => {\r\n   return state.usersPage.followingInProgress\r\n}","import React, { useEffect } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from 'redux';\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    toggleIsFollowing,\r\n    toggleIsFetching,\r\n    unFollow,\r\n    getUsersThunk,\r\n    setUnFollowThunk,\r\n    setFollowThunk\r\n} from \"../../Redux/usersReducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {WithAuthRedirect} from '../hoc/WithAuthRedirect';\r\nimport { getUsers, getTotalCount, getCurrentPage, getPageCount, getIsFetching, getFollowingInProgress } from '../../Redux/usersSelect';\r\n\r\n\r\nconst UsersContainerAPI = (props) => {\r\n\r\n    useEffect( () => {\r\n        console.log('qqq')\r\n        props.getUsersThunk (props.currentPage, props.pageCount)\r\n    }, [props.currentPage, props.pageCount]);\r\n\r\n    const usersPageNumber = (pageNumber) => {\r\n        props.getUsersThunk (pageNumber, props.pageCount)\r\n        props.setCurrentPage(pageNumber)\r\n    }\r\n\r\nreturn <>\r\n{props.isFetching ? <Preloader/> : null}\r\n<Users totalCount={props.totalCount}\r\n       pageCount={props.pageCount}\r\n       currentPage={props.currentPage}\r\n       usersPageNumber={usersPageNumber}\r\n       users={props.users}\r\n       follow={props.follow}\r\n       followingInProgress={props.followingInProgress}\r\n       toggleIsFollowing={props.toggleIsFollowing}\r\n       setUnFollowThunk={props.setUnFollowThunk}\r\n       setFollowThunk={props.setFollowThunk}\r\n/>\r\n</>\r\n}\r\n\r\n/*class UsersContainerAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        props.getUsersThunk (this.props.currentPage, this.props.pageCount)\r\n    }\r\n\r\n    usersPageNumber = (pageNumber) => {\r\n        this.props.getUsersThunk (pageNumber, this.props.pageCount)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalCount={this.props.totalCount}\r\n                   pageCount={this.props.pageCount}\r\n                   currentPage={this.props.currentPage}\r\n                   usersPageNumber={this.usersPageNumber}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   toggleIsFollowing={this.props.toggleIsFollowing}\r\n                   setUnFollowThunk={this.props.setUnFollowThunk}\r\n                   setFollowThunk={this.props.setFollowThunk}\r\n            />\r\n        </>\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageCount: getPageCount(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n    /*return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        pageCount: state.usersPage.pageCount,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }*/\r\n}\r\n\r\nexport default compose (connect(mapStateToProps,\r\n    {follow, unFollow, setCurrentPage,\r\n        toggleIsFetching, toggleIsFollowing,\r\n        setUnFollowThunk, setFollowThunk, getUsersThunk }),\r\n        WithAuthRedirect\r\n        ) (UsersContainerAPI)"],"sourceRoot":""}