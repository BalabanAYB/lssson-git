{"version":3,"sources":["utils/FormControls/FormControls.module.css","utils/FormControls/FormControls.jsx","utils/validator/validator.js","components/hoc/WithAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/FormDialogs.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","s","formControl","Input","type","required","value","maxLengthCreator","maxLength","length","WithAuthRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","DialogItem","path","id","dialogItem","activeClassName","active","name","Message","message","maxLength300","FormReduxDialogs","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","FormDialogs","formData","console","log","addMessage","Dialogs","dialogData","dialog","map","d","messageData","m","dialogs","messages","newMessage","compose","dialogsPage"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,kC,yJCErGC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC5CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACG,8BACG,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UAEA,oDAAcL,GAAWE,IACxBC,GAAY,+BAAOF,EAAKI,cAMrBI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACzCC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OAAO,8BACJ,sBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,IAA5D,UACG,+CAAOK,KAAK,QAAWV,GAAWE,IACjCC,GAAY,+BAAOF,EAAKI,e,iCCtBlC,oEAAO,IAAMM,EAAW,SAACC,GACzB,IAAIA,EACJ,MAAO,qBAGMC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAChD,GAAGA,EAAMG,OAASD,EAAW,MAAM,+BAAN,OAAsCA,EAAtC,kB,oJCFhBE,EAAmB,SAACC,GAAe,IACvCC,EADsC,4JAEzC,WACG,OAAKC,KAAKjB,MAAMkB,OAGT,cAACH,EAAD,eAAeE,KAAKjB,QAFjB,cAAC,IAAD,CAAUmB,GAAI,eAJc,GACZC,IAAML,WAatC,OADqCM,aAJJ,SAACC,GAAD,MAAY,CAC1CJ,OAAOI,EAAMC,KAAKL,UAGgBG,CAAqCL,K,oBChB7ErB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,8B,oBCAvGD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,6B,oICcxD4B,EAXI,SAACxB,GAEjB,IAAIyB,EAAOzB,EAAM0B,GAEhB,OACI,qBAAKtB,UAAWC,IAAEsB,WAAlB,SACA,cAAC,IAAD,CAASC,gBAAiBvB,IAAEwB,OAAQV,GAAI,YAAcM,EAAtD,SAA6DzB,EAAM8B,U,kBCC5DC,EARC,SAAC/B,GACb,OACI,qBAAKI,UAAWC,IAAE2B,QAAlB,SACKhC,EAAMgC,W,oCCDfC,EAAetB,YAAiB,KAa9BuB,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAXX,SAACnC,GACZ,OAAO,uBAAMqC,SAAUrC,EAAMsC,aAAtB,UACJ,8BACN,cAACC,EAAA,EAAD,CAAOT,KAAM,UAAWU,UAAW3C,IAAU4C,SAAU,CAAChC,IAAUwB,OAE5D,8BACG,2JAkBMS,EAXK,SAAC1C,GAQlB,OAAO,cAACkC,EAAD,CAAkBG,SALR,SAACM,GACfC,QAAQC,IAAIF,GACd3C,EAAM8C,WAAWH,EAASX,aCQfe,EA3BC,SAAC/C,GAEb,IAAIgD,EAAahD,EAAMsB,MAAM2B,OAAOC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMJ,GAAIyB,EAAEzB,QACzE0B,EAAcpD,EAAMsB,MAAMU,QAAQkB,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAErB,aAWnE,OACI,sBAAK5B,UAAWC,IAAEiD,QAAlB,UACI,8BAAMN,IACN,sBAAK5C,UAAWC,IAAEkD,SAAlB,UACKH,EACD,qBAAKhD,UAAWC,IAAEmD,WAAlB,SACI,cAAC,EAAD,CAAaV,WAAY9C,EAAM8C,sB,yBCDpCW,sBACXpC,aApBoB,SAACC,GACrB,MAAO,CACHA,MAAOA,EAAMoC,eAkBQ,CAACZ,iBAC1BhC,IAFW2C,CAGZV","file":"static/js/5.84100986.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__ZaVfv\",\"error\":\"FormControls_error__2MRZ5\",\"someError\":\"FormControls_someError__1Dhar\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div>\r\n         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n\r\n         <textarea {...input} {...props}/>\r\n         {hasError && <span>{meta.error}</span>}\r\n         </div>\r\n      </div>\r\n   )\r\n} \r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error\r\n\r\n   return <div>\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')} >\r\n         <input type=\"text\" {...input} {...props} />\r\n         {hasError && <span>{meta.error}</span> }\r\n      </div>\r\n   </div>\r\n\r\n}","export const required = (value) => {\r\nif (value) return undefined\r\nreturn \"Field is required\"\r\n} \r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\nif(value.length > maxLength) return `maximum length is more than ${maxLength} characters`\r\nreturn undefined\r\n} ","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router';\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render () {\r\n         if (!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n         }\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n   let mapStateToPropsForRedirect = (state) => ({\r\n      isAuth:state.auth.isAuth\r\n   })\r\n\r\n   let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n   return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__eJ66T\",\"messages\":\"Dialogs_messages__e6QiE\",\"newMessage\":\"Dialogs_newMessage__1jNlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__1vdOk\",\"active\":\"DialogItem_active__1ilIo\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n   let path = props.id\r\n\r\n    return  (\r\n        <div className={s.dialogItem}>\r\n        <NavLink activeClassName={s.active} to={'/dialogs/' + path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return  (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../utils/FormControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validator/validator';\r\n\r\nlet maxLength300 = maxLengthCreator(300)\r\n\r\nconst Form =  (props) => {\r\n   return <form onSubmit={props.handleSubmit} >\r\n      <div>\r\n<Field name={'message'} component={Textarea} validate={[required, maxLength300]} />\r\n      </div>\r\n      <div>\r\n         <button>Отправить сообщение</button>\r\n      </div>\r\n   </form>\r\n}\r\n\r\nconst FormReduxDialogs = reduxForm({form: \"dialogs\"})(Form)\r\n\r\nconst FormDialogs = (props) => {\r\n\r\n   \r\n   const onSubmit = (formData) => {\r\n      console.log(formData)\r\n    props.addMessage(formData.message)  \r\n   }\r\n\r\n   return <FormReduxDialogs onSubmit={onSubmit} />\r\n}\r\n\r\nexport default FormDialogs;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport FormDialogs from './Message/FormDialogs';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogData = props.state.dialog.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messageData = props.state.message.map(m => <Message message={m.message}/>)\r\n\r\n    /*let addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    let messageChange = () => {\r\n        let text = newMessage.current.value\r\n        props.newMessageText(text)\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>{dialogData}</div>\r\n            <div className={s.messages}>\r\n                {messageData}\r\n                <div className={s.newMessage}>\r\n                    <FormDialogs addMessage={props.addMessage}  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {addMessage} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from '../hoc/WithAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage\r\n    }\r\n}\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            let action = addMessageActionCreator()\r\n            dispatch(action)\r\n        },\r\n        newMessageText: (text) => {\r\n            let action = newMessageTextActionCreator(text)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {addMessage}),\r\n    WithAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}