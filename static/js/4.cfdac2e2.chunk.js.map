{"version":3,"sources":["utils/FormControls/FormControls.module.css","utils/FormControls/FormControls.jsx","utils/validator/validator.js","components/hoc/WithAuthRedirect.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profileinfo/Profileinfo.module.css","components/Profile/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","Redux/profileSelect.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","s","formControl","Input","type","required","value","maxLengthCreator","maxLength","length","WithAuthRedirect","Component","RedirectComponent","this","isAuth","to","React","connect","state","auth","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","onBlur","updateStatusThunk","onDoubleClick","Profileinfo","profile","myPosts","images","ava","src","photos","large","alt","info","name","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","Post","post","postBlock","iconMen","message","likeCount","maxLength10","MyPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","MyPosts","values","addPost","MyPostsContainer","newTextChange","profilePage","newPostText","Profile","postData","posts","map","content","store","getProfile","getStatus","compose","userId","getUserId","newUsersProfile","usersProfileThunk","getStatusThunk","withRouter","match","params","updateupdateStatusThunk"],"mappings":"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","file":"static/js/4.cfdac2e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__ZaVfv\",\"error\":\"FormControls_error__2MRZ5\",\"someError\":\"FormControls_someError__1Dhar\"};","import React from 'react';\r\nimport s from './FormControls.module.css';\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div>\r\n         <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n\r\n         <textarea {...input} {...props}/>\r\n         {hasError && <span>{meta.error}</span>}\r\n         </div>\r\n      </div>\r\n   )\r\n} \r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n   const hasError = meta.touched && meta.error\r\n\r\n   return <div>\r\n      <div className={s.formControl + ' ' + (hasError ? s.error : '')} >\r\n         <input type=\"text\" {...input} {...props} />\r\n         {hasError && <span>{meta.error}</span> }\r\n      </div>\r\n   </div>\r\n\r\n}","export const required = (value) => {\r\nif (value) return undefined\r\nreturn \"Field is required\"\r\n} \r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\nif(value.length > maxLength) return `maximum length is more than ${maxLength} characters`\r\nreturn undefined\r\n} ","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router';\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render () {\r\n         if (!this.props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n         }\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n   let mapStateToPropsForRedirect = (state) => ({\r\n      isAuth:state.auth.isAuth\r\n   })\r\n\r\n   let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n   return ConnectedAuthRedirectComponent;\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Profileinfo_ava__2c9km\",\"info\":\"Profileinfo_info__1LTWe\",\"name\":\"Profileinfo_name__1gc9t\",\"aboutMe\":\"Profileinfo_aboutMe__2QKGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconMen\":\"Post_iconMen__17ioT\",\"postBlock\":\"Post_postBlock__1FJsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"MyPosts_images__21Qul\"};","import React, {useState, useEffect} from \"react\";\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect ( () => {\r\n     setStatus(props.status)\r\n  }, [props.status])\r\n\r\nconst activeEditMode = () => {\r\n   setEditMode(true)\r\n}\r\n\r\nconst deActiveEditMode = () => {\r\n   setEditMode(false)\r\n   props.updateStatusThunk(status)\r\n}\r\n\r\nconst onStatusChange = (e) => {\r\n   setStatus(e.currentTarget.value)\r\n}\r\n\r\n   if (!editMode) {\r\n      return <div>\r\n         <span onDoubleClick={activeEditMode}>{props.status || 'Место для статуса'}</span>\r\n      </div>\r\n   }\r\n\r\n   else {\r\n      return <div>\r\n         <input autoFocus onChange={onStatusChange} onBlur={deActiveEditMode} type=\"text\" value={status} />\r\n      </div>\r\n   }\r\n}\r\n\r\nexport default ProfileStatus;","import s from './Profileinfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nlet Profileinfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    else {\r\n        return (\r\n            <div className={s.myPosts}>\r\n                <div className={s.images}></div>\r\n                <div className={s.ava}>\r\n                    <div>\r\n                        <img src={props.profile.photos.large} alt=\"\" />\r\n                    </div>\r\n                    <div className={s.info}>\r\n                        <span className={s.name}>{props.profile.fullName}</span>\r\n                        <ProfileStatus status={props.status} updateStatusThunk={props.updateStatusThunk} className={s.aboutMe} />\r\n                        {props.profile.lookingForAJob ? <span>Ищу работу</span> : <span>Не ищу работу</span>}\r\n                        <div>\r\n                            Что конкретно ищу: \"{props.profile.lookingForAJobDescription}\"\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profileinfo;","import s from './Post.module.css';\r\n\r\n\r\nlet Post = (props) => {\r\n    return (\r\n       <div className={s.post}>\r\n           <div className={s.postBlock}>\r\n           <div className={s.iconMen}></div>\r\n           <span>{props.message}</span>\r\n           </div>\r\n           <div>like:{props.likeCount}</div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from '../../../utils/FormControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validator/validator';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst Form = (props) => {\r\n\r\n   return <form onSubmit={props.handleSubmit}>\r\n      <Field name=\"post\" component={Textarea} placeholder=\"Введите ваш пост\" \r\n      validate={[required, maxLength10]}/>\r\n      <button>Отправить на стену</button>\r\n   </form>\r\n}\r\n\r\nconst MyPostForm = reduxForm({form:'newPost'})(Form)\r\n\r\nexport default MyPostForm;\r\n","import s from './MyPosts.module.css';\r\nimport React from 'react';\r\nimport MyPostForm from './MyPostForm';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.post)\r\n    }\r\n\r\n    return (\r\n       <div className={s.myPosts}>\r\n        <h3>My posts</h3>\r\n           <MyPostForm onSubmit={onAddPost}  />\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import {addPost, newPostText} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newTextChange: state.profilePage.newTextChange\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost,newPostText})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import s from \"./Profile.module.css\";\r\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\r\nimport Post from \"./Post/Post\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    let state = props.state.profilePage\r\n\r\n    let postData = state.posts.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n    return <div className={s.content}>\r\n            <Profileinfo profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\r\n            <MyPostsContainer store={props.store}/>\r\n            {postData}\r\n        </div>\r\n\r\n}\r\n\r\nexport default Profile;","export const getProfile = (state) => {\r\n   return state.profilePage.profile\r\n}\r\n\r\nexport const getStatus = (state) => {\r\n   return state.profilePage.status\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from 'redux';\r\nimport {newUsersProfile, usersProfileThunk, getStatusThunk, updateStatusThunk} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {WithAuthRedirect} from '../hoc/WithAuthRedirect';\r\nimport { getUserId } from '../../Redux/authSelect';\r\nimport { getProfile, getStatus } from '../../Redux/profileSelect';\r\n\r\n\r\n\r\nconst ProfileContainerAPI = (props) => {\r\n\r\n    let [userId, getUserId] = useState(props.match.params.userId)\r\n\r\n    useEffect( () => {\r\n        if(!userId) getUserId(props.userId)\r\n        \r\n        props.usersProfileThunk(userId)\r\n        props.getStatusThunk(userId)\r\n    }, [userId])\r\n\r\n    return <Profile {...props} status={props.status}\r\n     updateupdateStatusThunk={props.updateStatusThunk} profile={props.profile}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state,\r\n        profile: getProfile(state),\r\n        userId: getUserId(state),\r\n        status: getStatus(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {newUsersProfile, usersProfileThunk, getStatusThunk, updateStatusThunk}),\r\n    WithAuthRedirect,\r\n    withRouter\r\n) (ProfileContainerAPI);"],"sourceRoot":""}